{"version":1,"defects":[],"times":{"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Authorization\\RandomTokenGeneratorTest::testGenerateTokenReturnsHexString":0.017,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Authorization\\RandomTokenGeneratorTest::testGenerateTokenReturnsDifferentStringsOnSuccessiveCalls":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Authorization\\RandomTokenGeneratorTest::testGenerateTokenReturnsDifferentStringsForInitialCalls":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Authorization\\RandomTokenGeneratorTest::testGenerateTokenExpiryAddsInterval":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineDonationTokenFetcherTest::testGivenExistingDonation_AuthorizerReturnsTokenSet":0.018,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineDonationTokenFetcherTest::testGivenDonationWithMissingAccessToken_AuthorizerThrowsException":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineDonationTokenFetcherTest::testGivenDonationWithMissingUpdateToken_AuthorizerThrowsException":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineDonationTokenFetcherTest::testGivenMissingDonation_AuthorizerThrowsException":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationNotificationLogTest::testDonationIdGetsSet":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testDataEncodingAndDecodingRoundtrips":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testGivenNoData_getDecodedDataReturnsEmptyArray":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenSettingIdToAnInteger_getIdReturnsIt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenSettingIdToNull_getIdReturnsNull":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenIdIsNotSet_getIdReturnsNull":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testGivenNoData_getDataObjectReturnsObjectWithNullValues":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testGivenData_getDataObjectReturnsTheValues":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenProvidingData_setDataObjectSetsData":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenProvidingNullData_setObjectDoesNotSetFields":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenDataAlreadyExists_setDataObjectRetainsAndUpdatesData":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testWhenModifyingTheDataObject_modificationsAreReflected":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DoctrineEntities\\DonationTest::testStatusConstantsExist":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testCreatePrivateDonor":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testCreateCompanyDonor":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testCreateAnonymousDonor":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testCreateEmailOnlyDonor":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testCreatePrivateAnonymizedDonor":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFactoryTest::testUnknownAddressTypeThrowsException":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFieldMapperTest::testDonorTypeDoesNotAllowUnknownDonorClasses":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFieldMapperTest::testNameMapperProtectsAgainstUnknownFields":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFieldMapperTest::testGivenEmailOnlyDonorItConvertsAllNecessaryFields":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\DonorFieldMapperTest::testGivenPersonalDonationUpdatingWithEmailOnlyKeepsCity":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenPaymentMethodWithBankTransferCode_converterGetsCodeFromPayment#0":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenPaymentMethodWithBankTransferCode_converterGetsCodeFromPayment#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenPaymentMethodWithBankTransferCode_converterGetsCodeFromPayment#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testExistingDataInDataBlobIsRetainedOrUpdated":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenCancelledDonation_convertsToCancelledStatusDoctrineDonation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenDonationMarkedForModeration_convertsToModerationStatusDoctrineDonation":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenDonationWithoutModerationOrCancellation_paymentStatusIsPreserved":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenCancelledDonationThatIsMarkedForModeration_convertsToCancelledStatusDoctrineDonation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenModeratedDonation_convertsToDoctrineDonationHavingModerationReasons":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testStatusGetsSetFromLegacyPaymentData#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testStatusGetsSetFromLegacyPaymentData#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testStatusGetsSetFromLegacyPaymentData#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testLegacyDataGetsSet":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenExistingModerationReasons_theyOverrideIdenticalDonationModerationReasons":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\DomainToLegacyConverterTest::testGivenExistingModerationReasonsWhichDoNotExistInDonation_theyAreNotStored":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testGivenIncompleteTrackingData_converterFillsTrackingDataWithDefaults":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testGivenDataSetWithExportDate_donationIsMarkedAsExported":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testGivenDonationWithCancelledStatus_converterMarksDonationAsCancelled":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testGivenDonationWithModerationReasons_converterMarksDonationAsToBeModerated":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#private donor wants newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#private donor does not want newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#company donor wants newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#company donor does not want newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#email-only donor wants newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#email-only donor does not want newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#anonymous donor cannot receive newsletter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesNewsletterSubscriptionToDonor#converter ignores invalid newsletter subscription data from DB for anonymous":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#private donor wants receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#private donor does not want receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#legacy private donor does not want receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#company donor wants receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#company donor does not want receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#legacy company donor does not want receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#converter ignores invalid receipt data from DB for email-only":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#email-only donor does not want receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#anonymous donor cannot receive receipt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\DataAccess\\LegacyConverters\\LegacyToDomainConverterTest::testConverterPassesReceiptRequirementsToDonor#converter ignores invalid receipt data from DB for anonymous":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\InMemoryCommentFinderTest::testWhenThereAreNoComments_getCommentsReturnsEmptyArray":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\InMemoryCommentFinderTest::testWhenThereAreComments_getCommentsReturnsThem":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\InMemoryCommentFinderTest::testGivenLimitSmallerThanCommentCount_getCommentsLimitsItsResult":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\CompanyNameTest::testGivenCompanyNameOnly_getFullNameReturnsCompanyName":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\CompanyNameTest::testToArrayReturnsAllFields":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationCommentTest::testCreateComment":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationCommentTest::testCommentCanBePublished":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationCommentTest::testCommentCanBeRetracted":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testCancelingADonationSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testModerationStatusCanBeQueried":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testGivenModerationStatus_cancellationSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testIdIsNullWhenNotAssigned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testCanAssignIdToNewDonation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testCannotAssignIdToDonationWithIdentity":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testNewDonationsAreNotExported":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testAddCommentThrowsExceptionWhenCommentAlreadySet":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testAddCommentSetsWhenCommentNotSetYet":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testWhenNoCommentHasBeenSet_getCommentReturnsNull":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testWhenCompletingBookingOfExternalPaymentInModeration_commentIsMadePrivate":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testWhenCompletingBookingOfCancelledExternalPayment_commentIsMadePrivate":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testWhenCompletingBookingOfCancelledExternalPayment_lackOfCommentCausesNoError":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testCreateFollowupDonationForPayment_duplicatesRelevantFields":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonationTest::testMarkForModerationNeedsAtLeastOneModerationReason":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testTypesCanBeCompared":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testValueObjectComparisonSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testObjectComparisonFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testInvalidDonorTypeThrowsException":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromString#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromString#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromString#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromString#3":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromStringFailsForInvalidStrings#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromStringFailsForInvalidStrings#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromStringFailsForInvalidStrings#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromStringFailsForInvalidStrings#3":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testCreateDonorTypeFromStringFailsForInvalidStrings#4":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\DonorTypeTest::testToString":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\ModerationReasonTest::testObjectGetsBuiltCorrectly":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\ModerationReasonTest::testStringify#ModerationIdentifier and source":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\ModerationReasonTest::testStringify#ModerationIdentifier without source":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\PersonNameTest::testGivenNameWithoutSalutation_getFullNameReturnsNameWithoutSalutation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\PersonNameTest::testGivenNameWithSalutation_getFullNameReturnsNameWithoutSalutation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\PersonNameTest::testGivenNameWithTitle_getFullNameReturnsNameWithTitle":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\PersonNameTest::testGivenNameWithTitleAndSalutation_getFullNameReturnsNameWithTitle":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Domain\\Model\\PersonNameTest::testToArrayReturnsAllFields":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testTemplateDataContainsAllNecessaryDonationInformation":0.009,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testTemplateDataContainsModerationInformation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenAnonymousDonationMailerDoesNothing":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenUnmoderatedDonation_adminIsNotNotified":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenModeratedDonation_adminIsNotNotifiedOfAnyModerationExceptAmountTooHigh#address content violation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenModeratedDonation_adminIsNotNotifiedOfAnyModerationExceptAmountTooHigh#multiple violations, but not amount one":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenModeratedDonation_adminIsNotNotifiedOfAnyModerationExceptAmountTooHigh#amount violation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testGivenModeratedDonation_adminIsNotNotifiedOfAnyModerationExceptAmountTooHigh#amount violations and others":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\DonationConfirmationMailerTest::testTemplateDataForAdminContainsAllNecessaryDonationInformation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\HttpDonationConfirmationNotifierTest::testSendConfirmationFor":0.008,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\LoggingDonationRepositoryTest::testWhenGetDonationByIdThrowException_itIsLogged":0.009,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\LoggingDonationRepositoryTest::testWhenGetDonationByIdThrowException_itIsNotFullyCaught":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\LoggingDonationRepositoryTest::testWhenGetDonationByIdDoesNotThrow_returnValueIsReturnedWithoutLogging":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\LoggingDonationRepositoryTest::testWhenStoreDonationThrowException_itIsLogged":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\Infrastructure\\LoggingDonationRepositoryTest::testWhenStoreDonationThrowException_itIsNotFullyCaught":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentRequestTest::testFieldMutation":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentRequestTest::testCommentIsTrimmed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testValidCommentRequest_isSuccessful#0":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testValidCommentRequest_isSuccessful#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testValidCommentRequest_isSuccessful#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testValidCommentRequest_isSuccessful#3":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testValidCommentRequest_isSuccessful#4":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testLongComment_isNotSuccessful":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddComment\\AddCommentValidatorTest::testCommentWithInvalidCharacters_isNotSuccessful":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testDonorFieldsAreEmptyByDefault":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testDonorFieldGettersAndSetters":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testPaymentRequestDefaultValues":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testPaymentRequestGetterAndSetter":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testTrackingFields":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testOptIn":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testStringFieldsGetTrimmed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testDonorIsAnonymous":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\AddDonationRequestTest::testDonorIsEmailOnly":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenValidAmount_validatorReturnsNoViolations#average amount":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenValidAmount_validatorReturnsNoViolations#lower bound edge case":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenValidAmount_validatorReturnsNoViolations#upper bound edge case":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenSmallAmount_validatorReturnsViolation":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenLargeAmount_validatorReturnsViolation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\AddDonation\\DonationPaymentValidatorTest::testGivenDisallowedPaymentType_validatorReturnsViolation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CancelDonation\\CancelDonationRequestTest::testUnauthorizedRequest":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CancelDonation\\CancelDonationRequestTest::testAuthorizedRequest":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CancelDonation\\CancelDonationRequestTest::testUnauthorizedRequestHasNoUserName":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationFails_handlerReturnsFailure":0.008,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationSucceeds_handlerReturnsSuccess":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationSucceeds_confirmationMailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationSucceeds_donationIsStored":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationSucceeds_paymentIsBooked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenAuthorizationSucceeds_bookingEventIsLogged":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\CreditCardPaymentNotification\\CreditCardNotificationUseCaseTest::testWhenPaymentBookingServiceFails_handlerReturnsFailure":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationFails_failureResponseIsReturned":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationSucceeds_successResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationSucceeds_confirmationMailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationSucceeds_donationIsStored":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationSucceeds_paymentIsBooked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenAuthorizationSucceeds_bookingEventIsLogged":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testGivenNewTransactionIdForBookedDonation_createsNewDonation":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testGivenNewTransactionIdForBookedDonation_childCreationEventIsLogged":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testGivenNewTransactionIdForBookedDonation_noConfirmationMailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testFailingPaymentBookingService_notificationIsNotHandled":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenDonationDoesNotExist_returnsDonationWasNotFoundResponse":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePayPalPaymentNotification\\HandlePayPalPaymentCompletionNotificationUseCaseTest::testWhenPaymentIsAlreadyBooked_returnsPaymentAlreadyBookedResponse":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePaypalPaymentWithoutDonation\\HandlePaypalPaymentWithoutDonationUseCaseTest::testWhenPaymentIsForNonExistingDonation_newDonationIsCreated":0.004,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\HandlePaypalPaymentWithoutDonation\\HandlePaypalPaymentWithoutDonationUseCaseTest::testWhenPayPalBookingServiceFails_ReturnFailureResult":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ListComments\\CommentListTest::testGivenNoArguments_constructorCreatesEmptyList":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ListComments\\CommentListTest::testGivenOneComment_constructorCreatesListWithComment":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ListComments\\CommentListTest::testGivenMultipleComments_constructorCreatesListWithAllComments":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationIsNotFound_moderationFails":0.021,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationHasNoComment_moderationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationHasComment_publicationSucceeds#0":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationHasComment_publicationSucceeds#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenPublicationSucceeds_donationGetsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationHasComment_retractionSucceeds#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenDonationHasComment_retractionSucceeds#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testWhenRetractionSucceeds_donationGetsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateComment\\ModerateCommentUseCaseTest::testPublicationAndRetractionLogAdminUserName":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenNonExistingDonation_approvalFails":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenDonationThatIsNotMarkedForModeration_approvalFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenDonationThatWasMarkedForModeration_approvalSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testApprovalOfDonationIsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testWhenModeratedDonationGotApproved_adminUserNameIsWrittenAsLogEntry":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testWhenModeratedDonationGotApproved_donorIsNotified":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testWhenModeratedDonationGotApproved_notificationIsLogged":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testWhenModeratedDonationGotApprovedWithNotificationAlreadySent_donorIsNotNotified":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenNonExistingDonation_markingForModerationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenDonationThatIsAlreadyMarkedForModeration_markingForModerationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testGivenDonationThatIsNotModerated_markingForModerationSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testModerationMarkerOfDonationIsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testWhenDonationGetsMarkedForModeration_adminUserNameIsWrittenAsLogEntry":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\ModerateDonation\\ModerateDonationUseCaseTest::testApprovedDonation_canBeMarkedForModerationAgain":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\NotificationResponseTest::testSuccessResponseHasNoErrors":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\NotificationResponseTest::testFailureResponseHasErrorMessage":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\NotificationResponseTest::testFailureResponseMessageMustNotBeEmpty":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\RestoreDonation\\RestoreDonationUseCaseTest::testGivenNonExistingDonation_restoreFails":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\RestoreDonation\\RestoreDonationUseCaseTest::testGivenDonationThatIsNotCancelled_restoreFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\RestoreDonation\\RestoreDonationUseCaseTest::testGivenCancelledDonation_restoreSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\RestoreDonation\\RestoreDonationUseCaseTest::testRestoredDonationIsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\RestoreDonation\\RestoreDonationUseCaseTest::testWhenCancelledDonationGetsRestored_adminUserNameIsWrittenAsLogEntry":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenNotificationIsForNonExistingDonation_failureResponseIsReturned":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenAuthorizationFails_unhandledResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenAuthorizationSucceeds_successResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenAuthorizationSucceeds_donationIsStored":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenAuthorizationSucceeds_paymentIsBooked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenPaymentServiceReturnsFailure_unhandledResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\SofortPaymentNotification\\SofortPaymentNotificationUseCaseTest::testWhenAuthorizationSucceeds_confirmationMailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorRequestTest::testConstruction":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorRequestTest::testStringValuesAreTrimmed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorValidatorTest::testGivenAnonymousDonor_validationFails":0.007,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorValidatorTest::testGivenFailingDonorValidator_validationFails":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorValidatorTest::testGivenEmptyDonorRequestValues_validationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Unit\\UseCases\\UpdateDonor\\UpdateDonorValidatorTest::testGivenInvalidCompanyDonor_validationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DatabaseNotificationLogTest::testGivenEmptyTable_NoLogIsFound":0.008,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DatabaseNotificationLogTest::testGivenDonationIdInDatabase_LoggerFindsSentConfirmation":0.019,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DatabaseNotificationLogTest::testLogConfirmationSentWritesToDatabase":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DatabaseNotificationLogTest::testGivenDonationIdAlreadyLogged_writingConfirmationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testWhenThereAreNoComments_anEmptyListIsReturned":0.012,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testWhenThereAreLessCommentsThanTheLimit_theyAreAllReturned":0.004,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testWhenThereAreMoreCommentsThanTheLimit_aLimitedNumberAreReturned":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testOnlyPublicCommentsGetReturned":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testOnlyNonDeletedCommentsGetReturned":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testDoctrineThrowsException_getPublicCommentsRethrowsAsDomainException":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testGivenOffsetOfOneCausesOneCommentToBeSkipped":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineCommentFinderTest::testGivenOffsetBeyondResultSetCausesEmptyResult":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenNoDonation_authorizationFails":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testAuthorizerChecksUpdateTokenOfDonation#correct update token":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testAuthorizerChecksUpdateTokenOfDonation#incorrect update token":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testAuthorizerChecksAccessTokenOfDonation#correct access token":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testAuthorizerChecksAccessTokenOfDonation#incorrect update token":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenTokenAndLegacyDonation_updateAuthorizationFails":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenTokenAndLegacyDonation_accessAuthorizationFails":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenEmptyTokenAndLegacyDonation_updateAuthorizationFails":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenEmptyTokenAndLegacyDonation_accessAuthorizationFails":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testWhenUpdateTokenIsExpiredUpdateCheckFailsForUser":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testWhenUpdateTokenIsExpiredUpdateCheckSucceedsForSystem":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenExceptionFromEntityManager_authorizerWrapsExceptionForUserModification":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenExceptionFromEntityManager_authorizerWrapsExceptionForSystemModification":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationAuthorizerTest::testGivenExceptionFromEntityManager_authorizerWrapsExceptionForAccessCheck":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationEventLoggerTest::testIfDonationDoesNotExistLoggingFails":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationEventLoggerTest::testWhenPersistenceFails_domainExceptionIsThrown":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationEventLoggerTest::testWhenNoLogExists_logGetsAdded":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationEventLoggerTest::testWhenLogExists_logGetsAppended":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testValidDonationGetPersisted":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenInsertFails_domainExceptionIsThrown":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testNewDonationPersistenceRoundTrip":0.004,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testNewModeratedDonationPersistenceRoundTrip":0.036,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenDonationAlreadyExists_persistingCausesUpdate":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenDonationDoesNotExist_getDonationReturnsNull":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenDoctrineThrowsException_domainExceptionIsThrown":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenDonationDoesNotExist_persistingCausesException":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testGivenDonationUpdateWithoutDonorInformation_DonorNameStaysTheSame":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testCommentGetPersistedAndRetrieved":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testPersistingDonationWithoutCommentCausesCommentToBeCleared":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testWhenUpdateFails_domainExceptionIsThrown":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\DoctrineDonationRepositoryTest::testGivenTwoDonationsWithTheSameModerationReason_ReasonIsNotCreatedMultipleTimesButReused":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testGetCommentByIdIsNotImplemented":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testGetCommentByDonationIdThrowsWhenDonationDoesNotExist":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testGivenDonationWithoutComment_getCommentByDonationReturnsNull":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testGivenDonationWihComment_getCommentByDonationReturnsComments":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testInsertCommentForDonationFailsWhenDonationDoesNotExist":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testInsertCommentForDonationAddsCommentToDonationAndStoresIt":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testInsertCommentForDonationFakesCommentIdByReturningDonationId":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testUpdateCommentFailsIfDonationWasNotLoadedBefore":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testUpdateCommentStoresDonationIfDonationWasLoadedBefore":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testUpdateCommentFailsIfTheCommentIsNew":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\LegacyCommentRepositoryTest::testUpdateCommentFailsIfLoadedDonationHadNoComment":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\ModerationReasonRepositoryTest::testGivenStoredModerationReasons_itReturnsOnlyRequestedModerationReasons":0.004,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\ModerationReasonRepositoryTest::testGivenRequestingMoreReasonsThanPersisted_itReturnsOnlyAlreadyExistingModerationReasons":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\ModerationReasonRepositoryTest::testGivenRequestingNoReasons_itReturnsNoReasons":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk size 1 - query for each row":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk size 2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk size 5, only 2 queries needed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk size 5, 2 queries needed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk size 5 with 11 rows - 3 queries needed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk equal to row size":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIterateChunks#chunk bigger than row size":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#0":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#1":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#2":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#3":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#4":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#5":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#6":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetLimitsReturnedRows#7":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#0":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#1":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#2":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#3":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#4":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#5":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#6":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testMaxOffsetAndStartOffsetLimitReturnedRows#7":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DataAccess\\PaymentMigration\\ChunkedQueryResultIteratorTest::testIteratorEnforcesSelectQueries":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testWhenAuthorizationFails_errorIsReturned":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testGivenIdOfUnknownDonation_errorIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testGivenKnownIdAndValidAuth_successIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testGivenKnownIdAndValidAuth_mailerIsInvoked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testGivenIdOfUnknownDonation_mailerIsNotInvoked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\DonationAcceptedEventHandlerTest::testWhenAuthorizationFails_mailerIsNotInvoked":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testGivenValidRequest_commentGetsAdded":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenRepositoryThrowsExceptionOnGet_failureResponseIsReturned":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenRepositoryThrowsExceptionOnStore_failureResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testAuthorizationFails_failureResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenDonationDoesNotExist_failureResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenTextValidationFails_commentIsMadePrivate":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenTextValidationFails_donationIsMarkedForModeration":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenTextValidationFails_responseMessageDoesNotContainOK":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenDonationIsMarkedForModeration_responseMessageDoesNotContainOK":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testWhenValidationFails_failureResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testGivenAnonymousRequest_authorDisplayNameIsAnonymous":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddComment\\AddCommentUseCaseTest::testGivenMaliciousAnonymousRequest_authorDisplayNameIsAnonymous":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenValidationSucceeds_successResponseIsCreated":0.013,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenAnonymousDonationIsMade_correctBankTransferPrefixIsAdded":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenPrivateDonationIsMade_correctBankTransferPrefixIsAdded":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenCompanyDonationIsMade_correctBankTransferPrefixIsAdded":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenValidationFails_responseObjectContainsViolations":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenPaymentCreationFails_responseObjectContainsViolations":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenInvalidRequest_noConfirmationEmailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenValidRequest_confirmationEmailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenValidRequest_moderationEmailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenValidRequest_withIncompletePayment_confirmationEmailIsNotSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenValidRequestWithPolicyViolation_donationIsModerated":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testSuccessResponseContainsTokens":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testSuccessResponseContainsGeneratedUrl":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testUrlGeneratorGetsDonationData":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testGivenAnonymousDonation_UrlGeneratorGetsEmptyNames":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testEventIsEmittedAfterDonationWasStored":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testWhenEmailAddressIsBlacklisted_donationIsMarkedAsCancelled":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testOptingIntoDonationReceipt_persistedInDonor":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testOptingOutOfDonationReceipt_persistedInDonor":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testOptingIntoNewsletter_persistedInDonor":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationUseCaseTest::testOptingOutOfNewsletter_persistedInDonor":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenValidDonation_validationIsSuccessful":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenAnonymousDonorAndEmptyAddressFields_validatorReturnsNoViolations":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testPersonalInfoValidationFails_validatorReturnsFalse":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testDonorWithLongFields_validationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenEmailOnlyDonorWithMissingNameParts_validationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenCompleteEmailOnlyDonor_validationSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenAnonymousDonorWithDirectDebit_validationFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\AddDonationValidatorTest::testGivenEmailOnlyDonorWithDirectDebit_validationSucceeds":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testTooHighAmountGiven_needsModerationReturnsTrue":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenBadWords_needsModerationReturnsTrue":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenBadWordsWithAnonymousRequest_needsModerationReturnsFalse":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenExternalPayment_needsModerationReturnsFalse#Paypal does not need moderation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenExternalPayment_needsModerationReturnsFalse#Credit Card does not need moderation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenExternalPayment_needsModerationReturnsFalse#Sofort does not need moderation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenExternalPayment_needsModerationReturnsFalse#Direct Debit needs moderation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenExternalPayment_needsModerationReturnsFalse#Bank Transfer needs moderation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsNotForbidden_isAutoDeletedReturnsFalse#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsNotForbidden_isAutoDeletedReturnsFalse#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsNotForbidden_isAutoDeletedReturnsFalse#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsForbidden_isAutoDeletedReturnsTrue#0":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsForbidden_isAutoDeletedReturnsTrue#1":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testWhenEmailAddressIsForbidden_isAutoDeletedReturnsTrue#2":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\AddDonation\\ModerationServiceTest::testGivenAnonymousDonorWithEmailData_itIgnoresForbiddenEmails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testGivenIdOfUnknownDonation_cancellationIsNotSuccessful":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testResponseContainsDonationId":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testGivenIdOfCancellableDonation_cancellationIsSuccessful":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testGivenIdOfNonCancellableDonation_cancellationIsNotSuccessful":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenDonationGetsCancelled_cancellationConfirmationEmailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenDonationGetsCancelled_logEntryNeededByBackendIsWritten":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenDonationGetsCancelledByAdmin_adminUserNameIsWrittenAsLogEntry":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testGivenIdOfNonCancellableDonation_nothingIsWrittenToTheLog":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenConfirmationMailFails_mailDeliveryFailureResponseIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenGetDonationFails_cancellationIsNotSuccessful":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenDonationSavingFails_cancellationIsNotSuccessful":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenAdminUserCancelsDonation_authorizerChecksIfSystemCanModifyDonation":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenDonorCancelsDonation_authorizerUsesFullAuthorizationCheck":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testWhenAdminUserCancelsDonation_emailIsNotSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\CancelDonation\\CancelDonationUseCaseTest::testCanceledDonationIsPersisted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\GetDonation\\GetDonationUseCaseTest::testWhenAuthorizerSaysNoCanHaz_accessIsNotPermitted":0.002,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\GetDonation\\GetDonationUseCaseTest::testWhenAuthorizerSaysSureThingBro_accessIsPermitted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\GetDonation\\GetDonationUseCaseTest::testWhenDonationDoesNotExist_accessIsNotPermitted":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\GetDonation\\GetDonationUseCaseTest::testWhenDonationExistsAndAccessIsAllowed_donationIsReturned":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testWhenThereAreNoComments_anEmptyListIsPresented":0.001,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testWhenThereAreLessCommentsThanTheLimit_theyAreAllPresented":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testWhenThereAreMoreCommentsThanTheLimit_onlyTheFirstFewArePresented":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testWhenPageParameterIsTwo_correctOffsetIsUsed":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidPageNumber_firstPageIsReturned#too big":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidPageNumber_firstPageIsReturned#upper limit boundary":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidPageNumber_firstPageIsReturned#lower limit boundary":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidPageNumber_firstPageIsReturned#too small":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidLimit_10resultsAreReturned#too big":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidLimit_10resultsAreReturned#upper limit boundary":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidLimit_10resultsAreReturned#lower limit boundary":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\ListComments\\ListCommentsUseCaseTest::testGivenInvalidLimit_10resultsAreReturned#too small":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenAnonymousDonationAndValidAddressPersonalData_donationIsUpdated":0.003,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenAnonymousDonationAndValidCompanyAddressData_donationIsUpdated":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenAnonymousDonationAndValidAddressData_confirmationMailIsSent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenFailingAuthorizer_donationUpdateFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenExportedDonation_donationUpdateFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenCanceledDonation_donationUpdateFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testGivenFailingValidation_donationUpdateFails":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testOnUpdateAddress_emitsEvent":0,"WMDE\\Fundraising\\DonationContext\\Tests\\Integration\\UseCases\\UpdateDonor\\UpdateDonorUseCaseTest::testDonationNotFound_donationUpdateFails":0}}